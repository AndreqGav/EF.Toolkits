// <auto-generated />
using EF.Toolkits.Tests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EF.Toolkits.Tests.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241011221021_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("SQL_DOWN_Test", "Body_Down")
                .HasAnnotation("SQL_UP_Test", "Body_Up")
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("EF.Toolkits.Tests.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор.")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AnimalType")
                        .HasColumnType("integer")
                        .HasComment("Тип.\n\n0 - Собакен.\n1 - Кошька.\n2 - Рыбка.\n3 - Игрушка?")
                        .HasAnnotation("AutoEnumValuesComment", "");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasComment("Кличка.");

                    b.Property<string>("Species")
                        .HasColumnType("text")
                        .HasComment("Порода.");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b
                        .HasComment("Сущность \"Живтоное\".")
                        .HasAnnotation("SQL_DOWN_Test_AfterDelete", "DROP FUNCTION Test_AfterDelete() CASCADE;")
                        .HasAnnotation("SQL_DOWN_Test_BeforeInsert", "DROP FUNCTION Test_BeforeInsert() CASCADE;")
                        .HasAnnotation("SQL_UP_Test_AfterDelete", "CREATE FUNCTION Test_AfterDelete() RETURNS trigger as $Test_AfterDelete$\r\nBEGIN\r\nSELECT 1\r\nRETURN OLD;\r\nEND;\r\n$Test_AfterDelete$ LANGUAGE plpgsql;\r\n\r\nCREATE TRIGGER Test_AfterDelete AFTER DELETE\r\nON Animals\r\nFOR EACH ROW EXECUTE PROCEDURE Test_AfterDelete();\r\n")
                        .HasAnnotation("SQL_UP_Test_BeforeInsert", "CREATE FUNCTION Test_BeforeInsert() RETURNS trigger as $Test_BeforeInsert$\r\nBEGIN\r\nSELECT 1\r\nRETURN NEW;\r\nEND;\r\n$Test_BeforeInsert$ LANGUAGE plpgsql;\r\n\r\nCREATE TRIGGER Test_BeforeInsert BEFORE INSERT\r\nON Animals\r\nFOR EACH ROW EXECUTE PROCEDURE Test_BeforeInsert();\r\n");
                });

            modelBuilder.Entity("EF.Toolkits.Tests.Models.Emploee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("SecondName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Emploees");
                });

            modelBuilder.Entity("EF.Toolkits.Tests.Models.Figure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<string>("Shape")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Figures");
                });
#pragma warning restore 612, 618
        }
    }
}
